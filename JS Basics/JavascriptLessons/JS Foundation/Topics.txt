1. Variables.JS
* Let Var const
* Scope of Let Var const
* Hoisting
* Const object 

2. operators.js
* Addition (+)
* Subtraction (-)
* Multiplication (*)
* Division (/)
* Modulus (%)
* Exponent (**)
* Increment (++)
* Decrement (--)
* Addition Assignment (+=)
* Subtraction Assignment (-=)
* Multiplication Assignment (*=)
* Division Assignment (/=)
* Modulus Assignment (%=)
* Exponentiation Assignment (**=)

* String Concatenation with the Addition Operator

* Type Coercion in Addition (String and Number combination)

* Comparison Operators

* Equality (==)
* Strict Equality (===)
* Inequality (!=)
* Strict Inequality (!==)
* Greater Than (>)
* Less Than (<)
* Greater Than or Equal To (>=)
* Less Than or Equal To (<=)
* Ternary Operator (?)

Logical Operators

* Logical AND (&&)
* Logical OR (||)
* Logical NOT (!)
* Type Operators

* typeof
* instanceof
* Evaluation Order in Expressions (Left to Right evaluation)

3.dataTypes.js
* Dynamic nature of JavaScript data types
* String data type and usage
* Number data type and e notation
* Boolean data type
* Array data type and indexing
* Object data type and key-value pairs
* Undefined data type
* Null data type

4.function.js
* Basic structure and definition of a function in JavaScript
* Invoking or calling a function
* Making functions dynamic with parameters and arguments
* Returning values from functions
* Function scope and parameter accessibility
* Behavior of code after the return statement in a function
* Function reference and function execution differences
* Using functions in expressions and string concatenation

5.object.js
* Introduction to JavaScript Objects
* Defining Objects with Properties
* Adding Properties to Existing Objects
* Adding Methods to Objects
* Accessing Object Properties using Dot and Bracket Notation
* Use of the this Keyword in Methods
* Calling Object Methods with Bracket Notation
* Declaring Variables with the new Keyword for Different Data Types
* Understanding the typeof Operator for Objects Created with new

6.Events.js and Event module in w3School
* HTML Events
* JavaScript Reacting to Events
* Event Handler Attributes in HTML
* JavaScript Functions for Event Handling
* Common HTML Events
* JavaScript Event Handlers
* Handling and Verifying User Input and Actions
* Different Methods for Event Handling in JavaScript
* Comprehensive Use of Events in Web Development


7. Strings in js foundation and String in w3Schools
* JavaScript Strings
* Using Quotes
   Single Quotes
   Double Quotes
* Quotes Inside Quotes
* Template Strings
* String Length
* Escape Characters
   Single Quote (\')
   Double Quote (\")
   Backslash (\\)
   New Line (\n)
   Carriage Return (\r)
   Horizontal Tab (\t)
   Vertical Tab (\v)
   Backspace (\b)
   Form Feed (\f)
* Breaking Long Lines
   Using String Addition
   Using Backslash for Multiline Strings
* JavaScript Strings as Objects vs Primitive Values
   Comparison Using == and ===
   String Objects Producing Unexpected Results
* Multiline Strings with Template Strings (reiterated with emphasis on multiline capabilities)
*Strings in HTML
   Handling Special Characters
   Concatenation for Breaking Long Lines

8. Related to JS Foundation folder, stringMethods.js and w3schools StringMethods
* Length - .length
* Basic Extraction
   .charAt()
   .at()
   [] (property access)
* Character Codes
   .charCodeAt()
* Extracting String Parts
   .slice()
   .substring()
   .substr()
* Case Conversion and Concatenation
   .toUpperCase()
   .toLowerCase()
   + (concatenation)
* Trimming and Padding
   .trim()
   .trimStart(), .trimEnd()
   .padStart(), .padEnd()
* Advanced Character Extraction (Reiterated from Basic Extraction)
* Replacing String Content
   .replace()
   .replaceAll()
* Splitting Strings
   .split()


9. Related to JS Foundation folder, stringSearch.js and w3schools StringSearch

* Part 1: indexOf() and lastIndexOf()
   indexOf(): Find the first occurrence of a word or character.
   lastIndexOf(): Find the last occurrence of the same word or character.
* Part 2: search()
   search(): Find the index of the first occurrence of a word, using both plain text and regular expressions.
* Part 3: match() and matchAll()
   match(): Find all occurrences of a pattern using both simple strings and regular expressions.
   matchAll(): Iterate over all matches of a pattern using a regular expression with the global flag.
* Part 4: includes(), startsWith(), and endsWith()
   includes(): Check if the string includes a specific word or phrase, with and without specifying a starting index.
   startsWith(): Verify if the string starts with a certain word or character.
   endsWith(): Determine if the string ends with a specific term.

10. TemplateLiteral(stringTemplateLiterals.js and w3schools JavaScript Template Strings)
* Back-Tics Syntax
* Quotes Inside Strings
* Multiline Strings
* Interpolation
* Variable Substitutions
* Expression Substitution
* HTML Templates

11.
* Basic Number Types (Decimal and Non-Decimal Numbers)
* Scientific (Exponent) Notation
* 64-bit Floating Point Representation (IEEE 754 Standard)
* Integer Precision
* Floating Point Precision
* Adding Numbers and Strings (Addition vs. Concatenation)
* Numeric Strings
* NaN - Not a Number
* Infinity
* Hexadecimal Numbers
* JavaScript Numbers as Objects   